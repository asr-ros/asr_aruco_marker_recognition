#!/usr/bin/env python
PACKAGE = "asr_aruco_marker_recognition"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("showThresholdImage", bool_t, 0, "If true, shows the threshold image of the marker detector", False)
thresholdEnum = gen.enum([ gen.const("FIXED", int_t, 0, "Fixed Threshold"),
                       gen.const("ADAPTIVE",     int_t, 1, "Adaptive Threshold"),
                       gen.const("CANNY",      int_t, 2, "Canny")], "An enum for the threshold type")
gen.add("thresholdMethod", int_t, 0, "The threshold method to use", 1, 0, 2, edit_method=thresholdEnum)
gen.add("gaussianBlurSigma", int_t, 0, "Sigma for the guassian blur used to substract from the image to sharpen it", 3, 3, 99)
gen.add("sharpenWeightImage", double_t, 0, "Weight factor for the original image in the sharpening process", 1.7, -10.0, 10.0)
gen.add("sharpenWeightBlur", double_t, 0, "Weight factor for the blurred image in the sharpening process", -0.7, -10.0, 10.0)
gen.add("minSize", double_t, 0, "Minimum size of the markers for the marker detector", 0.01, 0.001, 1.0)
gen.add("maxSize", double_t, 0, "Maximum size of the markers for the marker detector", 0.5, 0.001, 1.0)
gen.add("minThreshold", int_t, 0, "Minimum Threshold value for the marker detector", 7, 0, 255)
gen.add("maxThreshold", int_t, 0, "Maximum Threshold value for the marker detector", 7, 0, 255)



exit(gen.generate(PACKAGE, "asr_aruco_marker_recognition", "ArucoMarkerRecognition"))
